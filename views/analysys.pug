html
  head
    title s-twitter(analysys)
  boby
    include includes/head.pug
    #11 --- analysys <a href=#{myhttp+"/us?nm="+name}>#{name}</a>
      |&nbsp<a href=#{myhttp+"/tl?nm="+name+"&sp=1"}>to timeline表示</a>
      |&nbsp<a href=#{myhttp+"/tl?nm="+name}>to text表示</a>
    - rtc,rtst3=go(tw)
    - t1 = new Date(tw[0].created_at)
    - t2 = new Date(tw[tw.length-1].created_at)
    #12
      |line = #{tw.length}
      |RT   = #{rtc}(#{rtc/tw.length*100}%)<br>
      -var msgmin = parseInt((t1-t2)/1000/60)
      -var msgh = parseInt(msgmin/60)
      -var msgm = msgmin % 60
      |time-analysys #{msgh+"時間"+msgm}分　#{(msgmin/50).toString().substr(0,7)}分/msg
      if (msgmin/50)<3 
        |&nbsp <font color="red">職業でしょう。botもありえます</font>
      else if (msgmin/50)<10 
        |&nbsp <font color="red">職業が疑われます</font>
    - tmtbl = maketimetable(msgmin,tw)
    table(class="type02")
      thead
        tr
          th no
          th time
          th cnt
          th view
      tbody
        -for (var i=0;i<tmtbl.length;i++) {
            //if tmtbl[i][1]!=0
            tr
              td #{i}
              td #{tmtbl[i][0].toLocaleString().substr(5,15)}
              td #{tmtbl[i][1]}
              td #{"+".repeat(tmtbl[i][1])}
        -}
    #13 retweets-analysys
    table(class="type02")
      tbody
          - for (var i=0;i<rtst3.length;i++ ) {
              tr
                  td #{i}
                  td <a href=#{myhttp + "/tl?nm=" +rtst3[i][0]+"&sp=1"}>#{rtst3[i][0]}</a> 
                  td #{rtst3[i][1]}
          -  }
    script
      //RTしている回数でリストアップ
      -function go(tw) {
      - rtc=0
      - rtst={}
      - for (var i=0;i<tw.length; i++){
      -   if (tw[i].text.indexOf("RT") == 0) {
      -     rtc=rtc+1
      -     idx  = tw[i].text.indexOf(':')
      -     sc2  = tw[i].text.substr(4,idx-4)
      -     if (rtst[sc2]==null) {
      -        rtst[sc2]=1
      -     } else {
      -        rtst[sc2]=rtst[sc2]+1
      -     }
      -   }
      - }
      //ここからsoatを行う
      - rtst2=[]
      - k1 = Object.keys(rtst)
      - for (var i=0;i<k1.length;i++){
      -     rtst2.push([k1[i],rtst[k1[i]]])
      - }
      - rtst2.sort(function(a,b){
      -     if(a[1]>b[1]) return -1
      -     if(a[1]<b[1]) return 1
      -     return 0
      -})
      - return  rtc,rtst2
      -}

      -function maketimetable(totalmin,tw){
      - t0 = new Date(tw[0].created_at)
      - t0.setMinutes(0)
      - t0.setSeconds(0)
      - deltamin=parseInt(totalmin/10.0)
      - deltamin=60.0
      - tmtbl=[]
      //最初に時間だけの表を作成する
      - for (var i=0;i<(totalmin/60+1);i++){
      -    var tt = new Date(t0);
      -    tmtbl[i]=[new Date(tt.setMinutes(tt.getMinutes()-deltamin*i)),0]
      -}
      //表にはいる発言数を計算する
      - for (var i=0;i<tmtbl.length;i++) {
      -    for (var j=0;j<tw.length;j++) {
      -        jtm = new Date(tw[j].created_at) 
      -        if (i!=0 && tmtbl[i-1][0]>=jtm && tmtbl[i][0]<jtm) {
      -           tmtbl[i][1]=tmtbl[i][1]+1
      -        }
      -        if (i==0 && tmtbl[0][0]<jtm ) {
      -           tmtbl[i][1]=tmtbl[i][1]+1
      -        }
      -    }
      - }
      - return tmtbl
      -}
